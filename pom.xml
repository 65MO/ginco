<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.smile.mcc.ginco</groupId>
	<artifactId>ginco</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Ginco</name>
	<packaging>pom</packaging>
	<properties>
		<!-- utils -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.6</java.version>
		<!-- dependencies versions -->
		<org.springframework.version>3.2.0.RELEASE</org.springframework.version>
		<org.apache.cxf.version>2.7.2</org.apache.cxf.version>
		<org.hibernate.version>4.1.9.Final</org.hibernate.version>
		<org.codehaus.jackson.version>1.9.11</org.codehaus.jackson.version>
		<junit.version>4.8.2</junit.version>
		<junit.addons.version>1.4</junit.addons.version>
		<mockito.version>1.9.5</mockito.version>
		<dbunit.version>2.4.8</dbunit.version>
		<hsqldb.version>1.8.0.10</hsqldb.version>
		<h2database.version>1.3.168</h2database.version>
		<dbcp.version>6.0.29</dbcp.version>
		<javax.inject.version>1</javax.inject.version>
		<logback.version>1.0.9</logback.version>
		<org.slf4j.version>1.6.6</org.slf4j.version>
		<aspectj.version>1.7.1</aspectj.version>
		<!-- cargo deployment - default development configuration Define a new 
			profile n your settings.xml file if you have another development configuration -->
		<tomcat.base>http://hadoc.lxc:80/</tomcat.base>
		<cargo.tomcat.manager.login>admin</cargo.tomcat.manager.login>
		<cargo.tomcat.manager.password>admin</cargo.tomcat.manager.password>
		<cargo.remote.uri>${tomcat.base}manager</cargo.remote.uri>
		<postgresql.jdbc.version>9.1-901.jdbc4</postgresql.jdbc.version>
		<maven.properties.plugin.version>1.0-alpha-2</maven.properties.plugin.version>
		<ginco.log.file>/var/log/tomcat6/ginco.log</ginco.log.file>
		<ginco.webservice.log.file>/var/log/tomcat6/ginco-webservices.log</ginco.webservice.log.file>
		<ginco.ext.js.file>ext-all.js</ginco.ext.js.file>
		<servlet.api.version>2.5</servlet.api.version>
		<apache.commons.lang.version>3.1</apache.commons.lang.version>
		<!-- remote configuration -->
		<scp.user>root</scp.user>
		<scp.password>hadoc</scp.password>
		<scp.host>hadoc.lxc</scp.host>
		<scp.folder.tomcat>/etc/tomcat6/</scp.folder.tomcat>
		<folder.conf>${basedir}/conf/local</folder.conf>
	</properties>

	<profiles>
		<profile>
			<id>integration</id>
			<properties>
				<!-- cargo deployment -->
				<tomcat.base>http://hadoc-int.eqx.intranet:80/</tomcat.base>
				<cargo.tomcat.manager.login>admin</cargo.tomcat.manager.login>
				<cargo.tomcat.manager.password>admin</cargo.tomcat.manager.password>
				<ginco.log.file>/var/log/tomcat6/ginco.log</ginco.log.file>
				<ginco.webservice.log.file>/var/log/tomcat6/ginco-webservices.log</ginco.webservice.log.file>
				<ginco.ext.js.file>ext-all.js</ginco.ext.js.file>
				<!-- remote configuration -->
				<scp.user>root</scp.user>
				<scp.password>hadoc-int</scp.password>
				<scp.host>hadoc-int.eqx.intranet</scp.host>
				<scp.folder.tomcat.conf>${scp.folder.tomcat}/shared/classes</scp.folder.tomcat.conf>
				<folder.conf>${basedir}/conf/integration</folder.conf>
			</properties>
		</profile>
		<profile>
			<id>recette</id>
			<properties>
				<!-- cargo deployment -->
				<tomcat.base>http://hadoc-rec.eqx.intranet:80/</tomcat.base>
				<cargo.tomcat.manager.login>admin</cargo.tomcat.manager.login>
				<cargo.tomcat.manager.password>admin</cargo.tomcat.manager.password>
				<ginco.log.file>/var/log/tomcat6/ginco.log</ginco.log.file>
				<ginco.webservice.log.file>/var/log/tomcat6/ginco-webservices.log</ginco.webservice.log.file>
				<ginco.ext.js.file>ext-all.js</ginco.ext.js.file>
				<!-- remote configuration -->
				<scp.user>root</scp.user>
				<scp.password>hadoc-rec</scp.password>
				<scp.host>hadoc-rec.eqx.intranet</scp.host>
				<scp.folder.tomcat.conf>${scp.folder.tomcat}/shared/classes</scp.folder.tomcat.conf>
				<folder.conf>${basedir}/conf/recette</folder.conf>
			</properties>
		</profile>
	</profiles>

	<scm>
		<url>scm:git:https://github.com/culturecommunication/ginco.git</url>
		<connection>scm:git:git://github.com/culturecommunication/ginco.git</connection>
		<developerConnection>scm:git:git@github.com:culturecommunication/ginco.git</developerConnection>
	</scm>
	<ciManagement>
		<system>continuum</system>
		<url>
         https://pic-java.smile.fr/continuum/projectGroupSummary.action?projectGroupId=331
        </url>
		<notifiers>
			<notifier>
				<sendOnSuccess>false</sendOnSuccess>
				<sendOnWarning>false</sendOnWarning>
				<sendOnFailure>true</sendOnFailure>
				<configuration>
					<address>mcc-hadoc@smile.fr</address>
				</configuration>
			</notifier>
		</notifiers>
	</ciManagement>

	<mailingLists>
		<mailingList>
			<name>MCC hadoc</name>
			<post>mcc-hadoc@smile.fr</post>
		</mailingList>
	</mailingLists>

	<developers>
		<developer>
			<id>dabel</id>
			<name>Daphné Bellemin</name>
			<email>dabel@smile.fr</email>
			<organization>Smile</organization>
			<organizationUrl>http://www.smile.fr</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
		<developer>
			<id>ilizo</id>
			<name>Illia Izotov</name>
			<email>ilizo@smile.fr</email>
			<organization>Smile</organization>
			<organizationUrl>http://www.smile.fr</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
		<developer>
			<id>frsto</id>
			<name>François-Régis Storez</name>
			<email>frsto@smile.fr</email>
			<organization>Smile</organization>
			<organizationUrl>http://www.smile.fr</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
	</developers>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-bundle-jaxrs</artifactId>
				<version>${org.apache.cxf.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-servlet_3.0_spec</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${org.apache.cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${org.hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>fr.smile.mcc.ginco</groupId>
				<artifactId>ginco-api</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>fr.smile.mcc.ginco</groupId>
				<artifactId>ginco-impl</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>fr.smile.mcc.ginco</groupId>
				<artifactId>ginco-commons</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>${javax.inject.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>dbcp</artifactId>
				<version>${dbcp.version}</version>
				<type>jar</type>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-jaxrs</artifactId>
				<version>${org.codehaus.jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-core-asl</artifactId>
				<version>${org.codehaus.jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback.version}</version>
				<scope>runtime</scope>				
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-access</artifactId>
				<version>${logback.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${org.slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>${hsqldb.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2database.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.jdbc.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.dbunit</groupId>
				<artifactId>dbunit</artifactId>
				<version>${dbunit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit-addons</groupId>
				<artifactId>junit-addons</artifactId>
				<version>${junit.addons.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet.api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${apache.commons.lang.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.0</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>1.2.3</version>
					<configuration>
						<container>
							<containerId>tomcat6x</containerId>
							<type>remote</type>
							<timeout>60000</timeout>
						</container>
						<configuration>
							<type>runtime</type>
							<properties>
								<cargo.datasource.datasource />
								<cargo.remote.uri>${cargo.remote.uri}</cargo.remote.uri>
								<cargo.remote.username>${cargo.tomcat.manager.login}</cargo.remote.username>
								<cargo.remote.password>${cargo.tomcat.manager.password}</cargo.remote.password>
							</properties>
						</configuration>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<configuration>
						<skip>true</skip>
					</configuration>
				</plugin>
			</plugins>				
		</pluginManagement>				
	</build>

	<distributionManagement>
		<repository>
			<id>nexus.internal.releases</id>
			<url>https://pic-java.smile.fr/nexus/content/repositories/InternalSmileReleases/</url>
		</repository>
		<snapshotRepository>
			<id>nexus.internal.snapshots</id>
			<url>https://pic-java.smile.fr/nexus/content/repositories/InternalSmileSnapshots/</url>
		</snapshotRepository>
		<site>
			<id>maven.doc.smile</id>
			<url>scp://pic-java.vitry.intranet/var/www/ginco/ginco</url>
		</site>
	</distributionManagement>
	<modules>
		<module>ginco-impl</module>
		<module>ginco-api</module>
		<module>ginco-commons</module>
		<module>ginco-admin</module>
		<module>ginco-webservices</module>
	</modules>
	<dependencies>
		<dependency>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>properties-maven-plugin</artifactId>
			<version>${maven.properties.plugin.version}</version>
			<type>maven-plugin</type>
		</dependency>
	</dependencies>
</project>
